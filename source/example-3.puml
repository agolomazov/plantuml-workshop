@startuml "Order Taking Classes"

class Order {
  OrderId: Guid
  TotalTax: Decimal
  OrderItems: List<OrderItem>
  CustomerId: Guid
  Decimal TotalAmount()
  Decimal TotalTax()
}

class OrderItem {
  OrderItemId: Guid
  Quantity: Integer
  UnitPrice: Decimal
  UnitTax: Decimal
  Decimal TotalTax()
  Decimal TotalPrice()
  ProductId: Guid
}

class Product {
  ProductId: Guid
  Name: string
  Price: Decimal
  Tax: Decimal
  ImagePath: string
}

class Payment {
  PaymentId: Guid
  PaymentStatus: PaymentStatus
  PaymentType: PaymentType
  Updated: DateTime
  Amount: Decimal
  OrderId: Guid

  void Pay(nameOnCard, creditCardNumber,\nsecurityCode, expirationDate)
}

class Customer {
  CustomerId: Guid
  Name: string
  Address: Address
}

class Address {
  StreetLine1: string
  StreetLine2: string
  Zip: Zip
  City: City
  State: City
  Country: City
  State: State
  Country: Country
}

class Zip {
  code: Integer
}

enum City {}
enum State {}
enum Country {}

enum PaymentType {
  credit, card, cash
}

enum PaymentStatus {
  inprogress, paid
}

Order "1" *-- "n" OrderItem
OrderItem o-- Product
Payment o-- Order
Order o-- Customer
Customer *-- Address
Address *-- City
Address *-- State
Address *-- Country
Payment *-- PaymentType
Payment *-- PaymentStatus
Address *-- Zip

@enduml